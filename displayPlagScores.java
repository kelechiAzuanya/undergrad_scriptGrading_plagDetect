/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smartGrader.GUI;

import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Comparator;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDType1Font;

/**
 *
 * @author LabaPc
 */
public class displayPlagScores extends javax.swing.JDialog {

    /**
     * Creates new form displayPlagScores
     */
    Map<String, Double> result;
    Map<String, Double> Sortedresult;
    String fileName;

    public displayPlagScores(java.awt.Frame parent, boolean modal, Map<String, Double> result, String fileName) {
        super(parent, modal);
        initComponents();
        this.result = result;
        this.fileName = fileName;
        sortResult();
    }

    private void sortResult() {
        Sortedresult = result.entrySet().stream()
                .sorted(Map.Entry.comparingByValue(Comparator.reverseOrder()))
                .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue,
                        (oldValue, newValue) -> oldValue, LinkedHashMap::new));
    }

    public void writeScore() {
        jTextAreaDisplayScore.setLineWrap(true);
        jTextAreaDisplayScore.append("Plagiarism Score for Script :" + fileName + "\t" + "\n");
        for (Map.Entry<String, Double> entry : Sortedresult.entrySet()) {
            String key = entry.getKey();
            Double value = entry.getValue();
            jTextAreaDisplayScore.append(key + " : " + value + "\t" + "\n");
        }
        Map<String, Double> mt = new TreeMap<>();
        mt.putAll(result);
        Map.Entry<String, Double> max = mt.entrySet().stream().max(
                Map.Entry.comparingByValue(Double::compareTo)).get();
        Map.Entry<String, Double> min = mt.entrySet().stream().min(
                Map.Entry.comparingByValue(Double::compareTo)).get();
        jTextAreaDisplayScore.append("Maximum Score : " + max + "\n");
        jTextAreaDisplayScore.append("Minimum Score : " + min + "\n");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDisplayScore = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jButtonSaveAsTxT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(700, 500));
        setPreferredSize(new java.awt.Dimension(600, 408));

        jTextAreaDisplayScore.setEditable(false);
        jTextAreaDisplayScore.setColumns(20);
        jTextAreaDisplayScore.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDisplayScore);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jButtonSaveAsTxT.setText("Save ");
        jButtonSaveAsTxT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveAsTxTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(197, Short.MAX_VALUE)
                .addComponent(jButtonSaveAsTxT)
                .addGap(144, 144, 144))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonSaveAsTxT)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents
//    public BufferedImage pdfImage() {
//        BufferedImage image = new BufferedImage(
//                displayPlagScores.WIDTH, displayPlagScores.HEIGHT, BufferedImage.TYPE_INT_RGB);
////        Graphics2D g2 = image.createGraphics();
////        displayPlagScores.paint(g2);
//        return image;
//    }
    private void jButtonSaveAsTxTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveAsTxTActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            try {
//                BufferedWriter writer = new BufferedWriter(new FileWriter(fileChooser.getSelectedFile()));
//                writer.write(jTextAreaDisplayScore.getText());
//
//                writer.close();
                FileWriter fileWriter = new FileWriter(fileChooser.getSelectedFile().getAbsolutePath()+".txt");
                PrintWriter printWriter = new PrintWriter(fileWriter);
                printWriter.print("Plagiarism Score for Script :" + fileName + "\t" + "\n");
                for (Map.Entry<String, Double> entry : Sortedresult.entrySet()) {
                    String key = entry.getKey();
                    Double value = entry.getValue();
                    printWriter.print(key + " : " + value + "\t" + "\n");
                };
                printWriter.close();
//                File filePath = fileChooser.getSelectedFile();
//                PDDocument document = new PDDocument();
//                PDPage page = new PDPage();
//                //write to the page
//                PDPageContentStream contentStream = new PDPageContentStream(document, page);
//                
//                //Begin the Content stream 
//                contentStream.beginText();
//
//                //Setting the font to the Content stream  
//                contentStream.setFont(PDType1Font.TIMES_ROMAN, 12);
//
//                //Setting the position for the line 
//                contentStream.newLineAtOffset(25, 500);
//                String text = jTextAreaDisplayScore.getText();
//                System.out.println(text);
//                //Adding text in the form of string 
//                contentStream.showText(text);
//
//                //Ending the content stream
//                contentStream.endText();
//                //Adding the blank page to the document
//                document.addPage(page);
//                contentStream.close();
//                //Saving the document
//                document.save(filePath);
//                document.close();
                JOptionPane.showMessageDialog(this, "Saved Succesfuly");
            } catch (IOException ex) {
                Logger.getLogger(displayPlagScores.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonSaveAsTxTActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(displayPlagScores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(displayPlagScores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(displayPlagScores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(displayPlagScores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>

    /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                displayPlagScores dialog = new displayPlagScores(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
    // }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSaveAsTxT;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaDisplayScore;
    // End of variables declaration//GEN-END:variables
}
